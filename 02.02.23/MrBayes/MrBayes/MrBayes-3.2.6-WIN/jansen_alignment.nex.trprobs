#NEXUS
[ID: 8085494692]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 Nicotiana,
    2 Grape,
    3 Tomato,
    4 Cucumis,
    5 Eucalyptus,
    6 Panax,
    7 Atropa,
    8 Potato,
    9 Spinacia,
   10 Arabidopsis,
   11 Cotton,
   12 Medicago,
   13 Soybean,
   14 Lotus,
   15 Oenothera,
   16 Ranunculus,
   17 Oryza,
   18 Triticum,
   19 Zea,
   20 Saccharum,
   21 Yucca,
   22 Typha,
   23 Acorus,
   24 Calycanthus,
   25 Nuphar,
   26 Nymphaea,
   27 Amborella,
   28 Ginkgo,
   29 Pinus;
   tree tree_1 [p = 0.405, P = 0.405] = [&W 0.405495] ((6,(9,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_2 [p = 0.236, P = 0.642] = [&W 0.236053] ((7,(6,(9,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2))))),(8,3),1);
   tree tree_3 [p = 0.107, P = 0.749] = [&W 0.106994] ((6,(9,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_4 [p = 0.068, P = 0.816] = [&W 0.067860] (7,((6,(9,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(8,3)),1);
   tree tree_5 [p = 0.066, P = 0.883] = [&W 0.066195] ((7,(6,(9,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2))))),(8,3),1);
   tree tree_6 [p = 0.020, P = 0.902] = [&W 0.019567] ((6,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,(15,5)),((10,9),((13,(14,12)),4))),2))),(7,(8,3)),1);
   tree tree_7 [p = 0.016, P = 0.918] = [&W 0.016236] ((6,(9,(((24,((((29,28),27),(26,25)),(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_8 [p = 0.014, P = 0.933] = [&W 0.014155] ((7,(6,(9,(((24,((((29,28),27),(26,25)),(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2))))),(8,3),1);
   tree tree_9 [p = 0.012, P = 0.945] = [&W 0.012073] (7,((6,(9,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(8,3)),1);
   tree tree_10 [p = 0.012, P = 0.957] = [&W 0.012073] ((6,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,(15,5)),((10,9),((13,(14,12)),4))),2))),(7,(8,3)),1);
   tree tree_11 [p = 0.012, P = 0.968] = [&W 0.011657] ((6,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),((10,9),(((11,(15,5)),((13,(14,12)),4)),2)))),(7,(8,3)),1);
   tree tree_12 [p = 0.006, P = 0.975] = [&W 0.006245] ((6,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),((10,9),(((11,(15,5)),((13,(14,12)),4)),2)))),(7,(8,3)),1);
   tree tree_13 [p = 0.004, P = 0.978] = [&W 0.003747] (7,((6,(9,(((24,((((29,28),27),(26,25)),(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(8,3)),1);
   tree tree_14 [p = 0.003, P = 0.981] = [&W 0.002914] ((6,(9,(((((27,((29,28),(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_15 [p = 0.002, P = 0.984] = [&W 0.002498] ((7,(6,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,(15,5)),((10,9),((13,(14,12)),4))),2)))),(8,3),1);
   tree tree_16 [p = 0.002, P = 0.985] = [&W 0.001665] ((6,(9,((((((29,28),27),(26,25)),(24,(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_17 [p = 0.001, P = 0.987] = [&W 0.001249] ((6,(9,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),((((11,10),(15,5)),((13,(14,12)),4)),2)))),(7,(8,3)),1);
   tree tree_18 [p = 0.001, P = 0.988] = [&W 0.001249] ((7,(6,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),((10,9),(((11,(15,5)),((13,(14,12)),4)),2))))),(8,3),1);
   tree tree_19 [p = 0.001, P = 0.989] = [&W 0.001249] ((7,(6,(9,(((((27,((29,28),(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,10),((15,5),((13,(14,12)),4))),2))))),(8,3),1);
   tree tree_20 [p = 0.001, P = 0.990] = [&W 0.001249] ((7,(6,(9,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),((((11,10),(15,5)),((13,(14,12)),4)),2))))),(8,3),1);
   tree tree_21 [p = 0.001, P = 0.992] = [&W 0.001249] ((7,(6,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,(15,5)),((10,9),((13,(14,12)),4))),2)))),(8,3),1);
   tree tree_22 [p = 0.001, P = 0.993] = [&W 0.000833] ((7,(6,(9,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),((((11,10),(15,5)),((13,(14,12)),4)),2))))),(8,3),1);
   tree tree_23 [p = 0.001, P = 0.993] = [&W 0.000833] ((6,(9,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),((((11,10),(15,5)),((13,(14,12)),4)),2)))),(7,(8,3)),1);
   tree tree_24 [p = 0.001, P = 0.994] = [&W 0.000833] (7,((6,(9,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),((((11,10),(15,5)),((13,(14,12)),4)),2)))),(8,3)),1);
   tree tree_25 [p = 0.000, P = 0.995] = [&W 0.000416] ((6,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),(((11,(15,5)),((13,(14,12)),4)),((10,9),2)))),(7,(8,3)),1);
   tree tree_26 [p = 0.000, P = 0.995] = [&W 0.000416] ((6,(9,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),(((15,5),((11,10),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_27 [p = 0.000, P = 0.995] = [&W 0.000416] ((6,(((((27,((29,28),(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),((10,9),(((11,(15,5)),((13,(14,12)),4)),2)))),(7,(8,3)),1);
   tree tree_28 [p = 0.000, P = 0.996] = [&W 0.000416] ((6,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),((10,9),((11,((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_29 [p = 0.000, P = 0.996] = [&W 0.000416] ((6,(((24,((((29,28),27),(26,25)),(23,(21,(22,(((20,19),18),17)))))),16),(((11,(15,5)),((10,9),((13,(14,12)),4))),2))),(7,(8,3)),1);
   tree tree_30 [p = 0.000, P = 0.997] = [&W 0.000416] ((7,(6,((((((29,28),(27,(26,25))),24),(23,(21,(22,(((20,19),18),17))))),16),((10,9),(((11,(15,5)),((13,(14,12)),4)),2))))),(8,3),1);
   tree tree_31 [p = 0.000, P = 0.997] = [&W 0.000416] (7,((6,(9,(((24,(((29,28),(27,(26,25))),(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(8,3)),1);
   tree tree_32 [p = 0.000, P = 0.998] = [&W 0.000416] ((7,(6,(9,((((((29,28),27),(26,25)),(24,(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2))))),(8,3),1);
   tree tree_33 [p = 0.000, P = 0.998] = [&W 0.000416] ((7,(6,(9,(((24,(((29,28),(27,(26,25))),(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2))))),(8,3),1);
   tree tree_34 [p = 0.000, P = 0.998] = [&W 0.000416] (7,((6,(9,(((((29,28),(27,(26,25))),(24,(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(8,3)),1);
   tree tree_35 [p = 0.000, P = 0.999] = [&W 0.000416] ((6,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),(((10,9),((11,(15,5)),((13,(14,12)),4))),2))),(7,(8,3)),1);
   tree tree_36 [p = 0.000, P = 0.999] = [&W 0.000416] ((6,(9,(((24,(((29,28),(27,(26,25))),(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
   tree tree_37 [p = 0.000, P = 1.000] = [&W 0.000416] (7,((6,(9,(((((((29,28),27),(26,25)),24),(23,(21,(22,(((20,19),18),17))))),16),((((11,10),(15,5)),((13,(14,12)),4)),2)))),(8,3)),1);
   tree tree_38 [p = 0.000, P = 1.000] = [&W 0.000416] ((6,(9,(((((29,28),(27,(26,25))),(24,(23,(21,(22,(((20,19),18),17)))))),16),(((11,10),((15,5),((13,(14,12)),4))),2)))),(7,(8,3)),1);
end;
